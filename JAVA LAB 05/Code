/****** P1 ****/


abstract class Animal {
    abstract void eatAndSleep();
}

class Lion extends Animal {
    void eatAndSleep() {
        System.out.println("Lion: Eats meat, and sleeps in a den.");
    }
}

class Deer extends Animal {
    void eatAndSleep() {
        System.out.println("Deer: Grazes on grass, and sleeps under trees.");
    }
}

class Tiger extends Animal {
    void eatAndSleep() {
        System.out.println("Tiger: Eats meat, and rests in dense forests.");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal lion = new Lion();
        Animal deer = new Deer();
        Animal tiger = new Tiger();
        System.out.println("Animal Behaviors:");
        lion.eatAndSleep();
        deer.eatAndSleep();
        tiger.eatAndSleep();
    }
}


/****** P2 ****/

abstract class Shape {
    int x, y;

    abstract void printArea();
}

class Rectangle extends Shape {
    Rectangle(int x, int y) {
        this.x = x;
        this.y = y;
    }

    @Override
    void printArea() {
        System.out.println("Area of Rectangle: " + (x * y));
    }
}

class Triangle extends Shape {
    Triangle(int x, int y) {
        this.x = x;
        this.y = y;
    }

    @Override
    void printArea() {
        System.out.println("Area of Triangle: " + (0.5 * x * y));
    }
}

class Circle extends Shape {
    Circle(int x) {
        this.x = x;
    }

    @Override
    void printArea() {
        System.out.println("Area of Circle: " + (3.14 * x * x));
    }
}

public class Main {
    public static void main(String[] args) {
        Shape rectangle = new Rectangle(5, 4);
        Shape triangle = new Triangle(6, 8);
        Shape circle = new Circle(5);

        rectangle.printArea();
        triangle.printArea();
        circle.printArea();
    }
}
